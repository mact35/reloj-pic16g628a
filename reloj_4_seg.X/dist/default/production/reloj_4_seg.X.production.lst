

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Jun 01 21:45:04 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 2.05
    13                           ; Generated 20/12/2018 GMT
    14                           ; 
    15                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F628A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  000A                     	;# 
    54  000B                     	;# 
    55  000C                     	;# 
    56  000E                     	;# 
    57  000E                     	;# 
    58  000F                     	;# 
    59  0010                     	;# 
    60  0011                     	;# 
    61  0012                     	;# 
    62  0015                     	;# 
    63  0015                     	;# 
    64  0016                     	;# 
    65  0017                     	;# 
    66  0018                     	;# 
    67  0019                     	;# 
    68  001A                     	;# 
    69  001F                     	;# 
    70  0081                     	;# 
    71  0085                     	;# 
    72  0086                     	;# 
    73  008C                     	;# 
    74  008E                     	;# 
    75  0092                     	;# 
    76  0098                     	;# 
    77  0099                     	;# 
    78  009A                     	;# 
    79  009B                     	;# 
    80  009C                     	;# 
    81  009D                     	;# 
    82  009F                     	;# 
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000E                     	;# 
    94  000E                     	;# 
    95  000F                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0015                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  008C                     	;# 
   111  008E                     	;# 
   112  0092                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009F                     	;# 
   120  0006                     _PORTB	set	6
   121  0034                     _RB4	set	52
   122  0033                     _RB3	set	51
   123  0032                     _RB2	set	50
   124  0031                     _RB1	set	49
   125  0036                     _RB6	set	54
   126  0035                     _RB5	set	53
   127  0037                     _RB7	set	55
   128  0086                     _TRISB	set	134
   129                           
   130                           ; #config settings
   131  0000                     
   132                           	psect	cinit
   133  07F6                     start_initialization:	
   134  07F6                     __initialization:	
   135                           
   136                           ; Clear objects allocated to COMMON
   137  07F6  01F0               	clrf	__pbssCOMMON& (0+127)
   138  07F7  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   139  07F8  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   140  07F9  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   141  07FA  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   142  07FB  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   143  07FC  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   144  07FD  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   145  07FE                     end_of_initialization:	
   146                           ;End of C runtime variable initialization code
   147                           
   148  07FE                     __end_of__initialization:	
   149  07FE  0183               	clrf	3
   150  07FF  2EDC               	ljmp	_main	;jump to C main() function
   151                           
   152                           	psect	bssCOMMON
   153  0070                     __pbssCOMMON:	
   154  0070                     _m2:	
   155  0070                     	ds	2
   156  0072                     _m1:	
   157  0072                     	ds	2
   158  0074                     _h2:	
   159  0074                     	ds	2
   160  0076                     _h1:	
   161  0076                     	ds	2
   162                           
   163                           	psect	cstackCOMMON
   164  0078                     __pcstackCOMMON:	
   165  0078                     ?_writeBit:	
   166  0078                     ??_writeBit:	
   167                           ; 1 bytes @ 0x0
   168                           
   169  0078                     ?_main:	
   170                           ; 1 bytes @ 0x0
   171                           
   172  0078                     writeBit@_bit:	
   173                           ; 1 bytes @ 0x0
   174                           
   175                           
   176                           ; 1 bytes @ 0x0
   177  0078                     	ds	1
   178  0079                     ?_writeNumber:	
   179  0079                     writeNumber@num:	
   180                           ; 1 bytes @ 0x1
   181                           
   182                           
   183                           ; 2 bytes @ 0x1
   184  0079                     	ds	2
   185  007B                     ??_writeNumber:	
   186  007B                     ??_main:	
   187                           ; 1 bytes @ 0x3
   188                           
   189                           
   190                           	psect	maintext
   191  06DC                     __pmaintext:	
   192                           ; 1 bytes @ 0x3
   193 ;;
   194 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   195 ;;
   196 ;; *************** function _main *****************
   197 ;; Defined at:
   198 ;;		line 138 in file "main.c"
   199 ;; Parameters:    Size  Location     Type
   200 ;;		None
   201 ;; Auto vars:     Size  Location     Type
   202 ;;		None
   203 ;; Return value:  Size  Location     Type
   204 ;;                  1    wreg      void 
   205 ;; Registers used:
   206 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   207 ;; Tracked objects:
   208 ;;		On entry : B00/0
   209 ;;		On exit  : 0/0
   210 ;;		Unchanged: 0/0
   211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   212 ;;      Params:         0       0       0       0
   213 ;;      Locals:         0       0       0       0
   214 ;;      Temps:          0       0       0       0
   215 ;;      Totals:         0       0       0       0
   216 ;;Total ram usage:        0 bytes
   217 ;; Hardware stack levels required when called:    2
   218 ;; This function calls:
   219 ;;		_writeNumber
   220 ;; This function is called by:
   221 ;;		Startup code after reset
   222 ;; This function uses a non-reentrant model
   223 ;;
   224                           
   225                           
   226                           ;psect for function _main
   227  06DC                     _main:	
   228                           
   229                           ;main.c: 139:     TRISB=0b00000000;
   230                           
   231                           ;incstack = 0
   232                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   233  06DC  1683               	bsf	3,5	;RP0=1, select bank1
   234  06DD  1303               	bcf	3,6	;RP1=0, select bank1
   235  06DE  0186               	clrf	6	;volatile
   236                           
   237                           ;main.c: 140:     PORTB = 0;
   238  06DF  1283               	bcf	3,5	;RP0=0, select bank0
   239  06E0  1303               	bcf	3,6	;RP1=0, select bank0
   240  06E1  0186               	clrf	6	;volatile
   241                           
   242                           ;main.c: 142:     h1 = 0;
   243  06E2  01F6               	clrf	_h1
   244  06E3  01F7               	clrf	_h1+1
   245                           
   246                           ;main.c: 143:     h2 = 0;
   247  06E4  01F4               	clrf	_h2
   248  06E5  01F5               	clrf	_h2+1
   249                           
   250                           ;main.c: 144:     m1 = 0;
   251  06E6  01F2               	clrf	_m1
   252  06E7  01F3               	clrf	_m1+1
   253                           
   254                           ;main.c: 145:     m2 = 0;
   255  06E8  01F0               	clrf	_m2
   256  06E9  01F1               	clrf	_m2+1
   257  06EA                     l799:	
   258                           
   259                           ;main.c: 148:         RB1 = 1;
   260  06EA  1283               	bcf	3,5	;RP0=0, select bank0
   261  06EB  1303               	bcf	3,6	;RP1=0, select bank0
   262  06EC  1486               	bsf	6,1	;volatile
   263                           
   264                           ;main.c: 149:         RB2 = 0;
   265  06ED  1106               	bcf	6,2	;volatile
   266                           
   267                           ;main.c: 150:         RB3 = 0;
   268  06EE  1186               	bcf	6,3	;volatile
   269                           
   270                           ;main.c: 151:         RB4 = 0;
   271  06EF  1206               	bcf	6,4	;volatile
   272                           
   273                           ;main.c: 152:         writeNumber(h1);
   274  06F0  0877               	movf	_h1+1,w
   275  06F1  00FA               	movwf	writeNumber@num+1
   276  06F2  0876               	movf	_h1,w
   277  06F3  00F9               	movwf	writeNumber@num
   278  06F4  271F               	fcall	_writeNumber
   279                           
   280                           ;main.c: 153:         RB1 = 0;
   281  06F5  1283               	bcf	3,5	;RP0=0, select bank0
   282  06F6  1303               	bcf	3,6	;RP1=0, select bank0
   283  06F7  1086               	bcf	6,1	;volatile
   284                           
   285                           ;main.c: 154:         RB2 = 1;
   286  06F8  1506               	bsf	6,2	;volatile
   287                           
   288                           ;main.c: 155:         RB3 = 0;
   289  06F9  1186               	bcf	6,3	;volatile
   290                           
   291                           ;main.c: 156:         RB4 = 0;
   292  06FA  1206               	bcf	6,4	;volatile
   293                           
   294                           ;main.c: 157:         writeNumber(h2);
   295  06FB  0875               	movf	_h2+1,w
   296  06FC  00FA               	movwf	writeNumber@num+1
   297  06FD  0874               	movf	_h2,w
   298  06FE  00F9               	movwf	writeNumber@num
   299  06FF  271F               	fcall	_writeNumber
   300                           
   301                           ;main.c: 158:         RB1 = 0;
   302  0700  1283               	bcf	3,5	;RP0=0, select bank0
   303  0701  1303               	bcf	3,6	;RP1=0, select bank0
   304  0702  1086               	bcf	6,1	;volatile
   305                           
   306                           ;main.c: 159:         RB2 = 0;
   307  0703  1106               	bcf	6,2	;volatile
   308                           
   309                           ;main.c: 160:         RB3 = 1;
   310  0704  1586               	bsf	6,3	;volatile
   311                           
   312                           ;main.c: 161:         RB4 = 0;
   313  0705  1206               	bcf	6,4	;volatile
   314                           
   315                           ;main.c: 162:         writeNumber(m1);
   316  0706  0873               	movf	_m1+1,w
   317  0707  00FA               	movwf	writeNumber@num+1
   318  0708  0872               	movf	_m1,w
   319  0709  00F9               	movwf	writeNumber@num
   320  070A  271F               	fcall	_writeNumber
   321                           
   322                           ;main.c: 163:         RB1 = 0;
   323  070B  1283               	bcf	3,5	;RP0=0, select bank0
   324  070C  1303               	bcf	3,6	;RP1=0, select bank0
   325  070D  1086               	bcf	6,1	;volatile
   326                           
   327                           ;main.c: 164:         RB2 = 0;
   328  070E  1106               	bcf	6,2	;volatile
   329                           
   330                           ;main.c: 165:         RB3 = 0;
   331  070F  1186               	bcf	6,3	;volatile
   332                           
   333                           ;main.c: 166:         RB4 = 1;
   334  0710  1606               	bsf	6,4	;volatile
   335                           
   336                           ;main.c: 167:         writeNumber(m2);
   337  0711  0871               	movf	_m2+1,w
   338  0712  00FA               	movwf	writeNumber@num+1
   339  0713  0870               	movf	_m2,w
   340  0714  00F9               	movwf	writeNumber@num
   341  0715  271F               	fcall	_writeNumber
   342                           
   343                           ;main.c: 168:         m2 = m2 + 1;
   344  0716  0870               	movf	_m2,w
   345  0717  3E01               	addlw	1
   346  0718  00F0               	movwf	_m2
   347  0719  0871               	movf	_m2+1,w
   348  071A  1803               	skipnc
   349  071B  3E01               	addlw	1
   350  071C  3E00               	addlw	0
   351  071D  00F1               	movwf	_m2+1
   352                           
   353                           ;main.c: 169:         if (1 == 0){
   354  071E  2EEA               	goto	l799
   355  071F                     __end_of_main:	
   356                           
   357                           	psect	text1
   358  071F                     __ptext1:	
   359 ;; *************** function _writeNumber *****************
   360 ;; Defined at:
   361 ;;		line 29 in file "main.c"
   362 ;; Parameters:    Size  Location     Type
   363 ;;  num             2    1[COMMON] int 
   364 ;; Auto vars:     Size  Location     Type
   365 ;;		None
   366 ;; Return value:  Size  Location     Type
   367 ;;                  1    wreg      void 
   368 ;; Registers used:
   369 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   370 ;; Tracked objects:
   371 ;;		On entry : 0/0
   372 ;;		On exit  : 0/0
   373 ;;		Unchanged: 0/0
   374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   375 ;;      Params:         2       0       0       0
   376 ;;      Locals:         0       0       0       0
   377 ;;      Temps:          0       0       0       0
   378 ;;      Totals:         2       0       0       0
   379 ;;Total ram usage:        2 bytes
   380 ;; Hardware stack levels used:    1
   381 ;; Hardware stack levels required when called:    1
   382 ;; This function calls:
   383 ;;		_writeBit
   384 ;; This function is called by:
   385 ;;		_main
   386 ;; This function uses a non-reentrant model
   387 ;;
   388                           
   389                           
   390                           ;psect for function _writeNumber
   391  071F                     _writeNumber:	
   392                           
   393                           ;main.c: 30:     RB6 = 0;
   394                           
   395                           ;incstack = 0
   396                           ; Regs used in _writeNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   397  071F  1283               	bcf	3,5	;RP0=0, select bank0
   398  0720  1303               	bcf	3,6	;RP1=0, select bank0
   399  0721  1306               	bcf	6,6	;volatile
   400                           
   401                           ;main.c: 31:     switch (num)
   402  0722  2FCD               	goto	l791
   403  0723                     l769:	
   404                           
   405                           ;main.c: 34:             writeBit(1);
   406  0723  3001               	movlw	1
   407  0724  26CC               	fcall	_writeBit
   408                           
   409                           ;main.c: 35:             writeBit(1);
   410  0725  3001               	movlw	1
   411  0726  26CC               	fcall	_writeBit
   412                           
   413                           ;main.c: 36:             writeBit(1);
   414  0727  3001               	movlw	1
   415  0728  26CC               	fcall	_writeBit
   416                           
   417                           ;main.c: 37:             writeBit(1);
   418  0729  3001               	movlw	1
   419  072A  26CC               	fcall	_writeBit
   420                           
   421                           ;main.c: 38:             writeBit(1);
   422  072B  3001               	movlw	1
   423  072C  26CC               	fcall	_writeBit
   424                           
   425                           ;main.c: 39:             writeBit(0);
   426  072D  3000               	movlw	0
   427  072E  26CC               	fcall	_writeBit
   428                           
   429                           ;main.c: 40:             writeBit(0);
   430  072F  3000               	movlw	0
   431  0730  26CC               	fcall	_writeBit
   432                           
   433                           ;main.c: 41:             writeBit(1);
   434  0731  3001               	movlw	1
   435  0732  26CC               	fcall	_writeBit
   436                           
   437                           ;main.c: 42:             break;
   438  0733  2FF2               	goto	l34
   439  0734                     l771:	
   440                           
   441                           ;main.c: 44:             writeBit(1);
   442  0734  3001               	movlw	1
   443  0735  26CC               	fcall	_writeBit
   444                           
   445                           ;main.c: 45:             writeBit(0);
   446  0736  3000               	movlw	0
   447  0737  26CC               	fcall	_writeBit
   448                           
   449                           ;main.c: 46:             writeBit(1);
   450  0738  3001               	movlw	1
   451  0739  26CC               	fcall	_writeBit
   452                           
   453                           ;main.c: 47:             writeBit(0);
   454  073A  3000               	movlw	0
   455  073B  26CC               	fcall	_writeBit
   456                           
   457                           ;main.c: 48:             writeBit(0);
   458  073C  3000               	movlw	0
   459  073D  26CC               	fcall	_writeBit
   460                           
   461                           ;main.c: 49:             writeBit(1);
   462  073E  3001               	movlw	1
   463  073F  26CC               	fcall	_writeBit
   464                           
   465                           ;main.c: 50:             writeBit(0);
   466  0740  3000               	movlw	0
   467  0741  26CC               	fcall	_writeBit
   468                           
   469                           ;main.c: 51:             writeBit(0);
   470  0742  3000               	movlw	0
   471  0743  26CC               	fcall	_writeBit
   472                           
   473                           ;main.c: 52:             break;
   474  0744  2FF2               	goto	l34
   475  0745                     l773:	
   476                           
   477                           ;main.c: 54:             writeBit(1);
   478  0745  3001               	movlw	1
   479  0746  26CC               	fcall	_writeBit
   480                           
   481                           ;main.c: 55:             writeBit(0);
   482  0747  3000               	movlw	0
   483  0748  26CC               	fcall	_writeBit
   484                           
   485                           ;main.c: 56:             writeBit(1);
   486  0749  3001               	movlw	1
   487  074A  26CC               	fcall	_writeBit
   488                           
   489                           ;main.c: 57:             writeBit(1);
   490  074B  3001               	movlw	1
   491  074C  26CC               	fcall	_writeBit
   492                           
   493                           ;main.c: 58:             writeBit(0);
   494  074D  3000               	movlw	0
   495  074E  26CC               	fcall	_writeBit
   496                           
   497                           ;main.c: 59:             writeBit(0);
   498  074F  3000               	movlw	0
   499  0750  26CC               	fcall	_writeBit
   500                           
   501                           ;main.c: 60:             writeBit(0);
   502  0751  3000               	movlw	0
   503  0752  26CC               	fcall	_writeBit
   504                           
   505                           ;main.c: 61:             writeBit(0);
   506  0753  3000               	movlw	0
   507  0754  26CC               	fcall	_writeBit
   508                           
   509                           ;main.c: 62:             break;
   510  0755  2FF2               	goto	l34
   511  0756                     l775:	
   512                           
   513                           ;main.c: 64:             writeBit(1);
   514  0756  3001               	movlw	1
   515  0757  26CC               	fcall	_writeBit
   516                           
   517                           ;main.c: 65:             writeBit(0);
   518  0758  3000               	movlw	0
   519  0759  26CC               	fcall	_writeBit
   520                           
   521                           ;main.c: 66:             writeBit(0);
   522  075A  3000               	movlw	0
   523  075B  26CC               	fcall	_writeBit
   524                           
   525                           ;main.c: 67:             writeBit(1);
   526  075C  3001               	movlw	1
   527  075D  26CC               	fcall	_writeBit
   528                           
   529                           ;main.c: 68:             writeBit(1);
   530  075E  3001               	movlw	1
   531  075F  26CC               	fcall	_writeBit
   532                           
   533                           ;main.c: 69:             writeBit(0);
   534  0760  3000               	movlw	0
   535  0761  26CC               	fcall	_writeBit
   536                           
   537                           ;main.c: 70:             writeBit(0);
   538  0762  3000               	movlw	0
   539  0763  26CC               	fcall	_writeBit
   540                           
   541                           ;main.c: 71:             writeBit(1);
   542  0764  3001               	movlw	1
   543  0765  26CC               	fcall	_writeBit
   544                           
   545                           ;main.c: 72:             break;
   546  0766  2FF2               	goto	l34
   547  0767                     l777:	
   548                           
   549                           ;main.c: 74:             writeBit(1);
   550  0767  3001               	movlw	1
   551  0768  26CC               	fcall	_writeBit
   552                           
   553                           ;main.c: 75:             writeBit(0);
   554  0769  3000               	movlw	0
   555  076A  26CC               	fcall	_writeBit
   556                           
   557                           ;main.c: 76:             writeBit(0);
   558  076B  3000               	movlw	0
   559  076C  26CC               	fcall	_writeBit
   560                           
   561                           ;main.c: 77:             writeBit(1);
   562  076D  3001               	movlw	1
   563  076E  26CC               	fcall	_writeBit
   564                           
   565                           ;main.c: 78:             writeBit(0);
   566  076F  3000               	movlw	0
   567  0770  26CC               	fcall	_writeBit
   568                           
   569                           ;main.c: 79:             writeBit(0);
   570  0771  3000               	movlw	0
   571  0772  26CC               	fcall	_writeBit
   572                           
   573                           ;main.c: 80:             writeBit(1);
   574  0773  3001               	movlw	1
   575  0774  26CC               	fcall	_writeBit
   576                           
   577                           ;main.c: 81:             writeBit(0);
   578  0775  3000               	movlw	0
   579  0776  26CC               	fcall	_writeBit
   580                           
   581                           ;main.c: 82:             break;
   582  0777  2FF2               	goto	l34
   583  0778                     l779:	
   584                           
   585                           ;main.c: 84:             writeBit(1);
   586  0778  3001               	movlw	1
   587  0779  26CC               	fcall	_writeBit
   588                           
   589                           ;main.c: 85:             writeBit(0);
   590  077A  3000               	movlw	0
   591  077B  26CC               	fcall	_writeBit
   592                           
   593                           ;main.c: 86:             writeBit(0);
   594  077C  3000               	movlw	0
   595  077D  26CC               	fcall	_writeBit
   596                           
   597                           ;main.c: 87:             writeBit(0);
   598  077E  3000               	movlw	0
   599  077F  26CC               	fcall	_writeBit
   600                           
   601                           ;main.c: 88:             writeBit(0);
   602  0780  3000               	movlw	0
   603  0781  26CC               	fcall	_writeBit
   604                           
   605                           ;main.c: 89:             writeBit(0);
   606  0782  3000               	movlw	0
   607  0783  26CC               	fcall	_writeBit
   608                           
   609                           ;main.c: 90:             writeBit(1);
   610  0784  3001               	movlw	1
   611  0785  26CC               	fcall	_writeBit
   612                           
   613                           ;main.c: 91:             writeBit(0);
   614  0786  3000               	movlw	0
   615  0787  26CC               	fcall	_writeBit
   616                           
   617                           ;main.c: 92:             break;
   618  0788  2FF2               	goto	l34
   619  0789                     l781:	
   620                           
   621                           ;main.c: 94:             writeBit(1);
   622  0789  3001               	movlw	1
   623  078A  26CC               	fcall	_writeBit
   624                           
   625                           ;main.c: 95:             writeBit(1);
   626  078B  3001               	movlw	1
   627  078C  26CC               	fcall	_writeBit
   628                           
   629                           ;main.c: 96:             writeBit(1);
   630  078D  3001               	movlw	1
   631  078E  26CC               	fcall	_writeBit
   632                           
   633                           ;main.c: 97:             writeBit(1);
   634  078F  3001               	movlw	1
   635  0790  26CC               	fcall	_writeBit
   636                           
   637                           ;main.c: 98:             writeBit(1);
   638  0791  3001               	movlw	1
   639  0792  26CC               	fcall	_writeBit
   640                           
   641                           ;main.c: 99:             writeBit(0);
   642  0793  3000               	movlw	0
   643  0794  26CC               	fcall	_writeBit
   644                           
   645                           ;main.c: 100:             writeBit(0);
   646  0795  3000               	movlw	0
   647  0796  26CC               	fcall	_writeBit
   648                           
   649                           ;main.c: 101:             writeBit(0);
   650  0797  3000               	movlw	0
   651  0798  26CC               	fcall	_writeBit
   652                           
   653                           ;main.c: 102:             break;
   654  0799  2FF2               	goto	l34
   655  079A                     l783:	
   656                           
   657                           ;main.c: 104:             writeBit(1);
   658  079A  3001               	movlw	1
   659  079B  26CC               	fcall	_writeBit
   660                           
   661                           ;main.c: 105:             writeBit(0);
   662  079C  3000               	movlw	0
   663  079D  26CC               	fcall	_writeBit
   664                           
   665                           ;main.c: 106:             writeBit(0);
   666  079E  3000               	movlw	0
   667  079F  26CC               	fcall	_writeBit
   668                           
   669                           ;main.c: 107:             writeBit(0);
   670  07A0  3000               	movlw	0
   671  07A1  26CC               	fcall	_writeBit
   672                           
   673                           ;main.c: 108:             writeBit(0);
   674  07A2  3000               	movlw	0
   675  07A3  26CC               	fcall	_writeBit
   676                           
   677                           ;main.c: 109:             writeBit(0);
   678  07A4  3000               	movlw	0
   679  07A5  26CC               	fcall	_writeBit
   680                           
   681                           ;main.c: 110:             writeBit(0);
   682  07A6  3000               	movlw	0
   683  07A7  26CC               	fcall	_writeBit
   684                           
   685                           ;main.c: 111:             writeBit(0);
   686  07A8  3000               	movlw	0
   687  07A9  26CC               	fcall	_writeBit
   688                           
   689                           ;main.c: 112:             break;
   690  07AA  2FF2               	goto	l34
   691  07AB                     l785:	
   692                           
   693                           ;main.c: 114:             writeBit(1);
   694  07AB  3001               	movlw	1
   695  07AC  26CC               	fcall	_writeBit
   696                           
   697                           ;main.c: 115:             writeBit(0);
   698  07AD  3000               	movlw	0
   699  07AE  26CC               	fcall	_writeBit
   700                           
   701                           ;main.c: 116:             writeBit(0);
   702  07AF  3000               	movlw	0
   703  07B0  26CC               	fcall	_writeBit
   704                           
   705                           ;main.c: 117:             writeBit(1);
   706  07B1  3001               	movlw	1
   707  07B2  26CC               	fcall	_writeBit
   708                           
   709                           ;main.c: 118:             writeBit(0);
   710  07B3  3000               	movlw	0
   711  07B4  26CC               	fcall	_writeBit
   712                           
   713                           ;main.c: 119:             writeBit(0);
   714  07B5  3000               	movlw	0
   715  07B6  26CC               	fcall	_writeBit
   716                           
   717                           ;main.c: 120:             writeBit(0);
   718  07B7  3000               	movlw	0
   719  07B8  26CC               	fcall	_writeBit
   720                           
   721                           ;main.c: 121:             writeBit(0);
   722  07B9  3000               	movlw	0
   723  07BA  26CC               	fcall	_writeBit
   724                           
   725                           ;main.c: 122:             break;
   726  07BB  2FF2               	goto	l34
   727  07BC                     l787:	
   728                           
   729                           ;main.c: 124:             writeBit(1);
   730  07BC  3001               	movlw	1
   731  07BD  26CC               	fcall	_writeBit
   732                           
   733                           ;main.c: 125:             writeBit(1);
   734  07BE  3001               	movlw	1
   735  07BF  26CC               	fcall	_writeBit
   736                           
   737                           ;main.c: 126:             writeBit(0);
   738  07C0  3000               	movlw	0
   739  07C1  26CC               	fcall	_writeBit
   740                           
   741                           ;main.c: 127:             writeBit(0);
   742  07C2  3000               	movlw	0
   743  07C3  26CC               	fcall	_writeBit
   744                           
   745                           ;main.c: 128:             writeBit(0);
   746  07C4  3000               	movlw	0
   747  07C5  26CC               	fcall	_writeBit
   748                           
   749                           ;main.c: 129:             writeBit(0);
   750  07C6  3000               	movlw	0
   751  07C7  26CC               	fcall	_writeBit
   752                           
   753                           ;main.c: 130:             writeBit(0);
   754  07C8  3000               	movlw	0
   755  07C9  26CC               	fcall	_writeBit
   756                           
   757                           ;main.c: 131:             writeBit(0);
   758  07CA  3000               	movlw	0
   759  07CB  26CC               	fcall	_writeBit
   760                           
   761                           ;main.c: 132:             break;
   762  07CC  2FF2               	goto	l34
   763  07CD                     l791:	
   764                           
   765                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   766                           ; Switch size 1, requested type "simple"
   767                           ; Number of cases is 1, Range of values is 0 to 0
   768                           ; switch strategies available:
   769                           ; Name         Instructions Cycles
   770                           ; simple_byte            4     3 (average)
   771                           ; direct_byte            7     6 (fixed)
   772                           ; jumptable            260     6 (fixed)
   773                           ;	Chosen strategy is simple_byte
   774  07CD  087A               	movf	writeNumber@num+1,w
   775  07CE  3A00               	xorlw	0	; case 0
   776  07CF  1903               	skipnz
   777  07D0  2FD2               	goto	l883
   778  07D1  2FF2               	goto	l34
   779  07D2                     l883:	
   780                           
   781                           ; Switch size 1, requested type "simple"
   782                           ; Number of cases is 10, Range of values is 0 to 9
   783                           ; switch strategies available:
   784                           ; Name         Instructions Cycles
   785                           ; direct_byte           16     6 (fixed)
   786                           ; simple_byte           31    16 (average)
   787                           ; jumptable            260     6 (fixed)
   788                           ;	Chosen strategy is simple_byte
   789  07D2  0879               	movf	writeNumber@num,w
   790  07D3  3A00               	xorlw	0	; case 0
   791  07D4  1903               	skipnz
   792  07D5  2FBC               	goto	l787
   793  07D6  3A01               	xorlw	1	; case 1
   794  07D7  1903               	skipnz
   795  07D8  2F23               	goto	l769
   796  07D9  3A03               	xorlw	3	; case 2
   797  07DA  1903               	skipnz
   798  07DB  2F34               	goto	l771
   799  07DC  3A01               	xorlw	1	; case 3
   800  07DD  1903               	skipnz
   801  07DE  2F45               	goto	l773
   802  07DF  3A07               	xorlw	7	; case 4
   803  07E0  1903               	skipnz
   804  07E1  2F56               	goto	l775
   805  07E2  3A01               	xorlw	1	; case 5
   806  07E3  1903               	skipnz
   807  07E4  2F67               	goto	l777
   808  07E5  3A03               	xorlw	3	; case 6
   809  07E6  1903               	skipnz
   810  07E7  2F78               	goto	l779
   811  07E8  3A01               	xorlw	1	; case 7
   812  07E9  1903               	skipnz
   813  07EA  2F89               	goto	l781
   814  07EB  3A0F               	xorlw	15	; case 8
   815  07EC  1903               	skipnz
   816  07ED  2F9A               	goto	l783
   817  07EE  3A01               	xorlw	1	; case 9
   818  07EF  1903               	skipnz
   819  07F0  2FAB               	goto	l785
   820  07F1  2FF2               	goto	l34
   821  07F2                     l34:	
   822                           
   823                           ;main.c: 135:     RB6 = 1;
   824  07F2  1283               	bcf	3,5	;RP0=0, select bank0
   825  07F3  1303               	bcf	3,6	;RP1=0, select bank0
   826  07F4  1706               	bsf	6,6	;volatile
   827  07F5  0008               	return
   828  07F6                     __end_of_writeNumber:	
   829                           
   830                           	psect	text2
   831  06CC                     __ptext2:	
   832 ;; *************** function _writeBit *****************
   833 ;; Defined at:
   834 ;;		line 21 in file "main.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;  _bit            1    wreg     unsigned char 
   837 ;; Auto vars:     Size  Location     Type
   838 ;;  _bit            1    0[COMMON] unsigned char 
   839 ;; Return value:  Size  Location     Type
   840 ;;                  1    wreg      void 
   841 ;; Registers used:
   842 ;;		wreg
   843 ;; Tracked objects:
   844 ;;		On entry : 0/0
   845 ;;		On exit  : 0/0
   846 ;;		Unchanged: 0/0
   847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   848 ;;      Params:         0       0       0       0
   849 ;;      Locals:         1       0       0       0
   850 ;;      Temps:          0       0       0       0
   851 ;;      Totals:         1       0       0       0
   852 ;;Total ram usage:        1 bytes
   853 ;; Hardware stack levels used:    1
   854 ;; This function calls:
   855 ;;		Nothing
   856 ;; This function is called by:
   857 ;;		_writeNumber
   858 ;; This function uses a non-reentrant model
   859 ;;
   860                           
   861                           
   862                           ;psect for function _writeBit
   863  06CC                     _writeBit:	
   864                           
   865                           ;incstack = 0
   866                           ; Regs used in _writeBit: [wreg]
   867                           ;writeBit@_bit stored from wreg
   868  06CC  00F8               	movwf	writeBit@_bit
   869                           
   870                           ;main.c: 21: void writeBit(char _bit);main.c: 22: {;main.c: 23:   RB7 = 0;
   871  06CD  1283               	bcf	3,5	;RP0=0, select bank0
   872  06CE  1303               	bcf	3,6	;RP1=0, select bank0
   873  06CF  1386               	bcf	6,7	;volatile
   874                           
   875                           ;main.c: 24:   RB5 = _bit;
   876  06D0  1C78               	btfss	writeBit@_bit,0
   877  06D1  2ED6               	goto	u10
   878  06D2  1283               	bcf	3,5	;RP0=0, select bank0
   879  06D3  1303               	bcf	3,6	;RP1=0, select bank0
   880  06D4  1686               	bsf	6,5	;volatile
   881  06D5  2ED9               	goto	u24
   882  06D6                     u10:	
   883  06D6  1283               	bcf	3,5	;RP0=0, select bank0
   884  06D7  1303               	bcf	3,6	;RP1=0, select bank0
   885  06D8  1286               	bcf	6,5	;volatile
   886  06D9                     u24:	
   887                           
   888                           ;main.c: 25:   RB7 = 1;
   889  06D9  1786               	bsf	6,7	;volatile
   890                           
   891                           ;main.c: 26:   RB7 = 0;
   892  06DA  1386               	bcf	6,7	;volatile
   893  06DB  0008               	return
   894  06DC                     __end_of_writeBit:	
   895  007E                     btemp	set	126	;btemp
   896  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_writeNumber
    _writeNumber->_writeBit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     341
                        _writeNumber
 ---------------------------------------------------------------------------------
 (1) _writeNumber                                          2     0      2     341
                                              1 COMMON     2     0      2
                           _writeBit
 ---------------------------------------------------------------------------------
 (2) _writeBit                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _writeNumber
     _writeBit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       B       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0       B      10        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Jun 01 21:45:04 2019

            __CFG_CP$OFF 0000           writeNumber@num 0079                       l34 07F2  
                     u10 06D6                       u24 06D9                       _h1 0076  
                     _h2 0074                       _m1 0072                       _m2 0070  
                    l771 0734                      l781 0789                      l773 0745  
                    l783 079A                      l775 0756                      l791 07CD  
                    l785 07AB                      l777 0767                      l769 0723  
                    l883 07D2                      l787 07BC                      l779 0778  
                    l799 06EA                      _RB1 0031                      _RB2 0032  
                    _RB3 0033                      _RB4 0034                      _RB5 0035  
                    _RB6 0036                      _RB7 0037             __CFG_CPD$OFF 0000  
           __CFG_LVP$OFF 0000                     _main 06DC                     btemp 007E  
                   start 0000                    ?_main 0078            __CFG_WDTE$OFF 0000  
            _writeNumber 071F                    _PORTB 0006                    _TRISB 0086  
          __CFG_PWRTE$ON 0000           __CFG_BOREN$OFF 0000                    status 0003  
                  wtemp0 007E           __CFG_MCLRE$OFF 0000          __initialization 07F6  
           __end_of_main 071F                   ??_main 007B         __end_of_writeBit 06DC  
__end_of__initialization 07FE           __pcstackCOMMON 0078               __pmaintext 06DC  
           ?_writeNumber 0079                ?_writeBit 0078                  __ptext1 071F  
                __ptext2 06CC     end_of_initialization 07FE             writeBit@_bit 0078  
             ??_writeBit 0078      start_initialization 07F6     __size_of_writeNumber 00D7  
            __pbssCOMMON 0070                ___latbits 0000        __size_of_writeBit 0010  
          __size_of_main 0043                 _writeBit 06CC            ??_writeNumber 007B  
    __CFG_FOSC$INTOSCCLK 0000      __end_of_writeNumber 07F6  
