

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Jun 01 21:52:13 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 2.05
    13                           ; Generated 20/12/2018 GMT
    14                           ; 
    15                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F628A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  000A                     	;# 
    54  000B                     	;# 
    55  000C                     	;# 
    56  000E                     	;# 
    57  000E                     	;# 
    58  000F                     	;# 
    59  0010                     	;# 
    60  0011                     	;# 
    61  0012                     	;# 
    62  0015                     	;# 
    63  0015                     	;# 
    64  0016                     	;# 
    65  0017                     	;# 
    66  0018                     	;# 
    67  0019                     	;# 
    68  001A                     	;# 
    69  001F                     	;# 
    70  0081                     	;# 
    71  0085                     	;# 
    72  0086                     	;# 
    73  008C                     	;# 
    74  008E                     	;# 
    75  0092                     	;# 
    76  0098                     	;# 
    77  0099                     	;# 
    78  009A                     	;# 
    79  009B                     	;# 
    80  009C                     	;# 
    81  009D                     	;# 
    82  009F                     	;# 
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000E                     	;# 
    94  000E                     	;# 
    95  000F                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0015                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  008C                     	;# 
   111  008E                     	;# 
   112  0092                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009F                     	;# 
   120  0006                     _PORTB	set	6
   121  0034                     _RB4	set	52
   122  0033                     _RB3	set	51
   123  0032                     _RB2	set	50
   124  0031                     _RB1	set	49
   125  0036                     _RB6	set	54
   126  0035                     _RB5	set	53
   127  0037                     _RB7	set	55
   128  0086                     _TRISB	set	134
   129                           
   130                           ; #config settings
   131  0000                     
   132                           	psect	cinit
   133  07F6                     start_initialization:	
   134  07F6                     __initialization:	
   135                           
   136                           ; Clear objects allocated to COMMON
   137  07F6  01F0               	clrf	__pbssCOMMON& (0+127)
   138  07F7  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   139  07F8  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   140  07F9  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   141  07FA  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   142  07FB  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   143  07FC  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   144  07FD  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   145  07FE                     end_of_initialization:	
   146                           ;End of C runtime variable initialization code
   147                           
   148  07FE                     __end_of__initialization:	
   149  07FE  0183               	clrf	3
   150  07FF  2EE4               	ljmp	_main	;jump to C main() function
   151                           
   152                           	psect	bssCOMMON
   153  0070                     __pbssCOMMON:	
   154  0070                     _m2:	
   155  0070                     	ds	2
   156  0072                     _m1:	
   157  0072                     	ds	2
   158  0074                     _h2:	
   159  0074                     	ds	2
   160  0076                     _h1:	
   161  0076                     	ds	2
   162                           
   163                           	psect	cstackCOMMON
   164  0078                     __pcstackCOMMON:	
   165  0078                     ?_writeBit:	
   166  0078                     ??_writeBit:	
   167                           ; 1 bytes @ 0x0
   168                           
   169  0078                     ?_main:	
   170                           ; 1 bytes @ 0x0
   171                           
   172  0078                     writeBit@_bit:	
   173                           ; 1 bytes @ 0x0
   174                           
   175                           
   176                           ; 1 bytes @ 0x0
   177  0078                     	ds	1
   178  0079                     ?_writeNumber:	
   179  0079                     writeNumber@num:	
   180                           ; 1 bytes @ 0x1
   181                           
   182                           
   183                           ; 2 bytes @ 0x1
   184  0079                     	ds	2
   185  007B                     ??_writeNumber:	
   186  007B                     ??_main:	
   187                           ; 1 bytes @ 0x3
   188                           
   189                           
   190                           	psect	maintext
   191  06E4                     __pmaintext:	
   192                           ; 1 bytes @ 0x3
   193 ;;
   194 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   195 ;;
   196 ;; *************** function _main *****************
   197 ;; Defined at:
   198 ;;		line 138 in file "main.c"
   199 ;; Parameters:    Size  Location     Type
   200 ;;		None
   201 ;; Auto vars:     Size  Location     Type
   202 ;;		None
   203 ;; Return value:  Size  Location     Type
   204 ;;                  1    wreg      void 
   205 ;; Registers used:
   206 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   207 ;; Tracked objects:
   208 ;;		On entry : B00/0
   209 ;;		On exit  : 0/0
   210 ;;		Unchanged: 0/0
   211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   212 ;;      Params:         0       0       0       0
   213 ;;      Locals:         0       0       0       0
   214 ;;      Temps:          0       0       0       0
   215 ;;      Totals:         0       0       0       0
   216 ;;Total ram usage:        0 bytes
   217 ;; Hardware stack levels required when called:    2
   218 ;; This function calls:
   219 ;;		_writeNumber
   220 ;; This function is called by:
   221 ;;		Startup code after reset
   222 ;; This function uses a non-reentrant model
   223 ;;
   224                           
   225                           
   226                           ;psect for function _main
   227  06E4                     _main:	
   228                           
   229                           ;main.c: 139:     TRISB=0b00000000;
   230                           
   231                           ;incstack = 0
   232                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   233  06E4  1683               	bsf	3,5	;RP0=1, select bank1
   234  06E5  1303               	bcf	3,6	;RP1=0, select bank1
   235  06E6  0186               	clrf	6	;volatile
   236                           
   237                           ;main.c: 140:     PORTB = 0;
   238  06E7  1283               	bcf	3,5	;RP0=0, select bank0
   239  06E8  1303               	bcf	3,6	;RP1=0, select bank0
   240  06E9  0186               	clrf	6	;volatile
   241                           
   242                           ;main.c: 142:     h1 = 0;
   243  06EA  01F6               	clrf	_h1
   244  06EB  01F7               	clrf	_h1+1
   245                           
   246                           ;main.c: 143:     h2 = 0;
   247  06EC  01F4               	clrf	_h2
   248  06ED  01F5               	clrf	_h2+1
   249                           
   250                           ;main.c: 144:     m1 = 0;
   251  06EE  01F2               	clrf	_m1
   252  06EF  01F3               	clrf	_m1+1
   253                           
   254                           ;main.c: 145:     m2 = 0;
   255  06F0  01F0               	clrf	_m2
   256  06F1  01F1               	clrf	_m2+1
   257  06F2                     l799:	
   258                           
   259                           ;main.c: 148:         RB1 = 1;
   260  06F2  1283               	bcf	3,5	;RP0=0, select bank0
   261  06F3  1303               	bcf	3,6	;RP1=0, select bank0
   262  06F4  1486               	bsf	6,1	;volatile
   263                           
   264                           ;main.c: 149:         RB2 = 0;
   265  06F5  1106               	bcf	6,2	;volatile
   266                           
   267                           ;main.c: 150:         RB3 = 0;
   268  06F6  1186               	bcf	6,3	;volatile
   269                           
   270                           ;main.c: 151:         RB4 = 0;
   271  06F7  1206               	bcf	6,4	;volatile
   272                           
   273                           ;main.c: 152:         writeNumber(h1);
   274  06F8  0877               	movf	_h1+1,w
   275  06F9  00FA               	movwf	writeNumber@num+1
   276  06FA  0876               	movf	_h1,w
   277  06FB  00F9               	movwf	writeNumber@num
   278  06FC  271F               	fcall	_writeNumber
   279                           
   280                           ;main.c: 153:         RB1 = 0;
   281  06FD  1283               	bcf	3,5	;RP0=0, select bank0
   282  06FE  1303               	bcf	3,6	;RP1=0, select bank0
   283  06FF  1086               	bcf	6,1	;volatile
   284                           
   285                           ;main.c: 154:         RB2 = 1;
   286  0700  1506               	bsf	6,2	;volatile
   287                           
   288                           ;main.c: 155:         RB3 = 0;
   289  0701  1186               	bcf	6,3	;volatile
   290                           
   291                           ;main.c: 156:         RB4 = 0;
   292  0702  1206               	bcf	6,4	;volatile
   293                           
   294                           ;main.c: 157:         writeNumber(h2);
   295  0703  0875               	movf	_h2+1,w
   296  0704  00FA               	movwf	writeNumber@num+1
   297  0705  0874               	movf	_h2,w
   298  0706  00F9               	movwf	writeNumber@num
   299  0707  271F               	fcall	_writeNumber
   300                           
   301                           ;main.c: 158:         RB1 = 0;
   302  0708  1283               	bcf	3,5	;RP0=0, select bank0
   303  0709  1303               	bcf	3,6	;RP1=0, select bank0
   304  070A  1086               	bcf	6,1	;volatile
   305                           
   306                           ;main.c: 159:         RB2 = 0;
   307  070B  1106               	bcf	6,2	;volatile
   308                           
   309                           ;main.c: 160:         RB3 = 1;
   310  070C  1586               	bsf	6,3	;volatile
   311                           
   312                           ;main.c: 161:         RB4 = 0;
   313  070D  1206               	bcf	6,4	;volatile
   314                           
   315                           ;main.c: 162:         writeNumber(m1);
   316  070E  0873               	movf	_m1+1,w
   317  070F  00FA               	movwf	writeNumber@num+1
   318  0710  0872               	movf	_m1,w
   319  0711  00F9               	movwf	writeNumber@num
   320  0712  271F               	fcall	_writeNumber
   321                           
   322                           ;main.c: 163:         RB1 = 0;
   323  0713  1283               	bcf	3,5	;RP0=0, select bank0
   324  0714  1303               	bcf	3,6	;RP1=0, select bank0
   325  0715  1086               	bcf	6,1	;volatile
   326                           
   327                           ;main.c: 164:         RB2 = 0;
   328  0716  1106               	bcf	6,2	;volatile
   329                           
   330                           ;main.c: 165:         RB3 = 0;
   331  0717  1186               	bcf	6,3	;volatile
   332                           
   333                           ;main.c: 166:         RB4 = 1;
   334  0718  1606               	bsf	6,4	;volatile
   335                           
   336                           ;main.c: 167:         writeNumber(m2);
   337  0719  0871               	movf	_m2+1,w
   338  071A  00FA               	movwf	writeNumber@num+1
   339  071B  0870               	movf	_m2,w
   340  071C  00F9               	movwf	writeNumber@num
   341  071D  271F               	fcall	_writeNumber
   342                           
   343                           ;main.c: 168:         if (1 == 0){
   344  071E  2EF2               	goto	l799
   345  071F                     __end_of_main:	
   346                           
   347                           	psect	text1
   348  071F                     __ptext1:	
   349 ;; *************** function _writeNumber *****************
   350 ;; Defined at:
   351 ;;		line 29 in file "main.c"
   352 ;; Parameters:    Size  Location     Type
   353 ;;  num             2    1[COMMON] int 
   354 ;; Auto vars:     Size  Location     Type
   355 ;;		None
   356 ;; Return value:  Size  Location     Type
   357 ;;                  1    wreg      void 
   358 ;; Registers used:
   359 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   360 ;; Tracked objects:
   361 ;;		On entry : 0/0
   362 ;;		On exit  : 0/0
   363 ;;		Unchanged: 0/0
   364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   365 ;;      Params:         2       0       0       0
   366 ;;      Locals:         0       0       0       0
   367 ;;      Temps:          0       0       0       0
   368 ;;      Totals:         2       0       0       0
   369 ;;Total ram usage:        2 bytes
   370 ;; Hardware stack levels used:    1
   371 ;; Hardware stack levels required when called:    1
   372 ;; This function calls:
   373 ;;		_writeBit
   374 ;; This function is called by:
   375 ;;		_main
   376 ;; This function uses a non-reentrant model
   377 ;;
   378                           
   379                           
   380                           ;psect for function _writeNumber
   381  071F                     _writeNumber:	
   382                           
   383                           ;main.c: 30:     RB6 = 0;
   384                           
   385                           ;incstack = 0
   386                           ; Regs used in _writeNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   387  071F  1283               	bcf	3,5	;RP0=0, select bank0
   388  0720  1303               	bcf	3,6	;RP1=0, select bank0
   389  0721  1306               	bcf	6,6	;volatile
   390                           
   391                           ;main.c: 31:     switch (num)
   392  0722  2FCD               	goto	l791
   393  0723                     l769:	
   394                           
   395                           ;main.c: 34:             writeBit(1);
   396  0723  3001               	movlw	1
   397  0724  26D4               	fcall	_writeBit
   398                           
   399                           ;main.c: 35:             writeBit(1);
   400  0725  3001               	movlw	1
   401  0726  26D4               	fcall	_writeBit
   402                           
   403                           ;main.c: 36:             writeBit(1);
   404  0727  3001               	movlw	1
   405  0728  26D4               	fcall	_writeBit
   406                           
   407                           ;main.c: 37:             writeBit(1);
   408  0729  3001               	movlw	1
   409  072A  26D4               	fcall	_writeBit
   410                           
   411                           ;main.c: 38:             writeBit(1);
   412  072B  3001               	movlw	1
   413  072C  26D4               	fcall	_writeBit
   414                           
   415                           ;main.c: 39:             writeBit(0);
   416  072D  3000               	movlw	0
   417  072E  26D4               	fcall	_writeBit
   418                           
   419                           ;main.c: 40:             writeBit(0);
   420  072F  3000               	movlw	0
   421  0730  26D4               	fcall	_writeBit
   422                           
   423                           ;main.c: 41:             writeBit(1);
   424  0731  3001               	movlw	1
   425  0732  26D4               	fcall	_writeBit
   426                           
   427                           ;main.c: 42:             break;
   428  0733  2FF2               	goto	l34
   429  0734                     l771:	
   430                           
   431                           ;main.c: 44:             writeBit(1);
   432  0734  3001               	movlw	1
   433  0735  26D4               	fcall	_writeBit
   434                           
   435                           ;main.c: 45:             writeBit(0);
   436  0736  3000               	movlw	0
   437  0737  26D4               	fcall	_writeBit
   438                           
   439                           ;main.c: 46:             writeBit(1);
   440  0738  3001               	movlw	1
   441  0739  26D4               	fcall	_writeBit
   442                           
   443                           ;main.c: 47:             writeBit(0);
   444  073A  3000               	movlw	0
   445  073B  26D4               	fcall	_writeBit
   446                           
   447                           ;main.c: 48:             writeBit(0);
   448  073C  3000               	movlw	0
   449  073D  26D4               	fcall	_writeBit
   450                           
   451                           ;main.c: 49:             writeBit(1);
   452  073E  3001               	movlw	1
   453  073F  26D4               	fcall	_writeBit
   454                           
   455                           ;main.c: 50:             writeBit(0);
   456  0740  3000               	movlw	0
   457  0741  26D4               	fcall	_writeBit
   458                           
   459                           ;main.c: 51:             writeBit(0);
   460  0742  3000               	movlw	0
   461  0743  26D4               	fcall	_writeBit
   462                           
   463                           ;main.c: 52:             break;
   464  0744  2FF2               	goto	l34
   465  0745                     l773:	
   466                           
   467                           ;main.c: 54:             writeBit(1);
   468  0745  3001               	movlw	1
   469  0746  26D4               	fcall	_writeBit
   470                           
   471                           ;main.c: 55:             writeBit(0);
   472  0747  3000               	movlw	0
   473  0748  26D4               	fcall	_writeBit
   474                           
   475                           ;main.c: 56:             writeBit(1);
   476  0749  3001               	movlw	1
   477  074A  26D4               	fcall	_writeBit
   478                           
   479                           ;main.c: 57:             writeBit(1);
   480  074B  3001               	movlw	1
   481  074C  26D4               	fcall	_writeBit
   482                           
   483                           ;main.c: 58:             writeBit(0);
   484  074D  3000               	movlw	0
   485  074E  26D4               	fcall	_writeBit
   486                           
   487                           ;main.c: 59:             writeBit(0);
   488  074F  3000               	movlw	0
   489  0750  26D4               	fcall	_writeBit
   490                           
   491                           ;main.c: 60:             writeBit(0);
   492  0751  3000               	movlw	0
   493  0752  26D4               	fcall	_writeBit
   494                           
   495                           ;main.c: 61:             writeBit(0);
   496  0753  3000               	movlw	0
   497  0754  26D4               	fcall	_writeBit
   498                           
   499                           ;main.c: 62:             break;
   500  0755  2FF2               	goto	l34
   501  0756                     l775:	
   502                           
   503                           ;main.c: 64:             writeBit(1);
   504  0756  3001               	movlw	1
   505  0757  26D4               	fcall	_writeBit
   506                           
   507                           ;main.c: 65:             writeBit(0);
   508  0758  3000               	movlw	0
   509  0759  26D4               	fcall	_writeBit
   510                           
   511                           ;main.c: 66:             writeBit(0);
   512  075A  3000               	movlw	0
   513  075B  26D4               	fcall	_writeBit
   514                           
   515                           ;main.c: 67:             writeBit(1);
   516  075C  3001               	movlw	1
   517  075D  26D4               	fcall	_writeBit
   518                           
   519                           ;main.c: 68:             writeBit(1);
   520  075E  3001               	movlw	1
   521  075F  26D4               	fcall	_writeBit
   522                           
   523                           ;main.c: 69:             writeBit(0);
   524  0760  3000               	movlw	0
   525  0761  26D4               	fcall	_writeBit
   526                           
   527                           ;main.c: 70:             writeBit(0);
   528  0762  3000               	movlw	0
   529  0763  26D4               	fcall	_writeBit
   530                           
   531                           ;main.c: 71:             writeBit(1);
   532  0764  3001               	movlw	1
   533  0765  26D4               	fcall	_writeBit
   534                           
   535                           ;main.c: 72:             break;
   536  0766  2FF2               	goto	l34
   537  0767                     l777:	
   538                           
   539                           ;main.c: 74:             writeBit(1);
   540  0767  3001               	movlw	1
   541  0768  26D4               	fcall	_writeBit
   542                           
   543                           ;main.c: 75:             writeBit(0);
   544  0769  3000               	movlw	0
   545  076A  26D4               	fcall	_writeBit
   546                           
   547                           ;main.c: 76:             writeBit(0);
   548  076B  3000               	movlw	0
   549  076C  26D4               	fcall	_writeBit
   550                           
   551                           ;main.c: 77:             writeBit(1);
   552  076D  3001               	movlw	1
   553  076E  26D4               	fcall	_writeBit
   554                           
   555                           ;main.c: 78:             writeBit(0);
   556  076F  3000               	movlw	0
   557  0770  26D4               	fcall	_writeBit
   558                           
   559                           ;main.c: 79:             writeBit(0);
   560  0771  3000               	movlw	0
   561  0772  26D4               	fcall	_writeBit
   562                           
   563                           ;main.c: 80:             writeBit(1);
   564  0773  3001               	movlw	1
   565  0774  26D4               	fcall	_writeBit
   566                           
   567                           ;main.c: 81:             writeBit(0);
   568  0775  3000               	movlw	0
   569  0776  26D4               	fcall	_writeBit
   570                           
   571                           ;main.c: 82:             break;
   572  0777  2FF2               	goto	l34
   573  0778                     l779:	
   574                           
   575                           ;main.c: 84:             writeBit(1);
   576  0778  3001               	movlw	1
   577  0779  26D4               	fcall	_writeBit
   578                           
   579                           ;main.c: 85:             writeBit(0);
   580  077A  3000               	movlw	0
   581  077B  26D4               	fcall	_writeBit
   582                           
   583                           ;main.c: 86:             writeBit(0);
   584  077C  3000               	movlw	0
   585  077D  26D4               	fcall	_writeBit
   586                           
   587                           ;main.c: 87:             writeBit(0);
   588  077E  3000               	movlw	0
   589  077F  26D4               	fcall	_writeBit
   590                           
   591                           ;main.c: 88:             writeBit(0);
   592  0780  3000               	movlw	0
   593  0781  26D4               	fcall	_writeBit
   594                           
   595                           ;main.c: 89:             writeBit(0);
   596  0782  3000               	movlw	0
   597  0783  26D4               	fcall	_writeBit
   598                           
   599                           ;main.c: 90:             writeBit(1);
   600  0784  3001               	movlw	1
   601  0785  26D4               	fcall	_writeBit
   602                           
   603                           ;main.c: 91:             writeBit(0);
   604  0786  3000               	movlw	0
   605  0787  26D4               	fcall	_writeBit
   606                           
   607                           ;main.c: 92:             break;
   608  0788  2FF2               	goto	l34
   609  0789                     l781:	
   610                           
   611                           ;main.c: 94:             writeBit(1);
   612  0789  3001               	movlw	1
   613  078A  26D4               	fcall	_writeBit
   614                           
   615                           ;main.c: 95:             writeBit(1);
   616  078B  3001               	movlw	1
   617  078C  26D4               	fcall	_writeBit
   618                           
   619                           ;main.c: 96:             writeBit(1);
   620  078D  3001               	movlw	1
   621  078E  26D4               	fcall	_writeBit
   622                           
   623                           ;main.c: 97:             writeBit(1);
   624  078F  3001               	movlw	1
   625  0790  26D4               	fcall	_writeBit
   626                           
   627                           ;main.c: 98:             writeBit(1);
   628  0791  3001               	movlw	1
   629  0792  26D4               	fcall	_writeBit
   630                           
   631                           ;main.c: 99:             writeBit(0);
   632  0793  3000               	movlw	0
   633  0794  26D4               	fcall	_writeBit
   634                           
   635                           ;main.c: 100:             writeBit(0);
   636  0795  3000               	movlw	0
   637  0796  26D4               	fcall	_writeBit
   638                           
   639                           ;main.c: 101:             writeBit(0);
   640  0797  3000               	movlw	0
   641  0798  26D4               	fcall	_writeBit
   642                           
   643                           ;main.c: 102:             break;
   644  0799  2FF2               	goto	l34
   645  079A                     l783:	
   646                           
   647                           ;main.c: 104:             writeBit(1);
   648  079A  3001               	movlw	1
   649  079B  26D4               	fcall	_writeBit
   650                           
   651                           ;main.c: 105:             writeBit(0);
   652  079C  3000               	movlw	0
   653  079D  26D4               	fcall	_writeBit
   654                           
   655                           ;main.c: 106:             writeBit(0);
   656  079E  3000               	movlw	0
   657  079F  26D4               	fcall	_writeBit
   658                           
   659                           ;main.c: 107:             writeBit(0);
   660  07A0  3000               	movlw	0
   661  07A1  26D4               	fcall	_writeBit
   662                           
   663                           ;main.c: 108:             writeBit(0);
   664  07A2  3000               	movlw	0
   665  07A3  26D4               	fcall	_writeBit
   666                           
   667                           ;main.c: 109:             writeBit(0);
   668  07A4  3000               	movlw	0
   669  07A5  26D4               	fcall	_writeBit
   670                           
   671                           ;main.c: 110:             writeBit(0);
   672  07A6  3000               	movlw	0
   673  07A7  26D4               	fcall	_writeBit
   674                           
   675                           ;main.c: 111:             writeBit(0);
   676  07A8  3000               	movlw	0
   677  07A9  26D4               	fcall	_writeBit
   678                           
   679                           ;main.c: 112:             break;
   680  07AA  2FF2               	goto	l34
   681  07AB                     l785:	
   682                           
   683                           ;main.c: 114:             writeBit(1);
   684  07AB  3001               	movlw	1
   685  07AC  26D4               	fcall	_writeBit
   686                           
   687                           ;main.c: 115:             writeBit(0);
   688  07AD  3000               	movlw	0
   689  07AE  26D4               	fcall	_writeBit
   690                           
   691                           ;main.c: 116:             writeBit(0);
   692  07AF  3000               	movlw	0
   693  07B0  26D4               	fcall	_writeBit
   694                           
   695                           ;main.c: 117:             writeBit(1);
   696  07B1  3001               	movlw	1
   697  07B2  26D4               	fcall	_writeBit
   698                           
   699                           ;main.c: 118:             writeBit(0);
   700  07B3  3000               	movlw	0
   701  07B4  26D4               	fcall	_writeBit
   702                           
   703                           ;main.c: 119:             writeBit(0);
   704  07B5  3000               	movlw	0
   705  07B6  26D4               	fcall	_writeBit
   706                           
   707                           ;main.c: 120:             writeBit(0);
   708  07B7  3000               	movlw	0
   709  07B8  26D4               	fcall	_writeBit
   710                           
   711                           ;main.c: 121:             writeBit(0);
   712  07B9  3000               	movlw	0
   713  07BA  26D4               	fcall	_writeBit
   714                           
   715                           ;main.c: 122:             break;
   716  07BB  2FF2               	goto	l34
   717  07BC                     l787:	
   718                           
   719                           ;main.c: 124:             writeBit(1);
   720  07BC  3001               	movlw	1
   721  07BD  26D4               	fcall	_writeBit
   722                           
   723                           ;main.c: 125:             writeBit(1);
   724  07BE  3001               	movlw	1
   725  07BF  26D4               	fcall	_writeBit
   726                           
   727                           ;main.c: 126:             writeBit(0);
   728  07C0  3000               	movlw	0
   729  07C1  26D4               	fcall	_writeBit
   730                           
   731                           ;main.c: 127:             writeBit(0);
   732  07C2  3000               	movlw	0
   733  07C3  26D4               	fcall	_writeBit
   734                           
   735                           ;main.c: 128:             writeBit(0);
   736  07C4  3000               	movlw	0
   737  07C5  26D4               	fcall	_writeBit
   738                           
   739                           ;main.c: 129:             writeBit(0);
   740  07C6  3000               	movlw	0
   741  07C7  26D4               	fcall	_writeBit
   742                           
   743                           ;main.c: 130:             writeBit(0);
   744  07C8  3000               	movlw	0
   745  07C9  26D4               	fcall	_writeBit
   746                           
   747                           ;main.c: 131:             writeBit(0);
   748  07CA  3000               	movlw	0
   749  07CB  26D4               	fcall	_writeBit
   750                           
   751                           ;main.c: 132:             break;
   752  07CC  2FF2               	goto	l34
   753  07CD                     l791:	
   754                           
   755                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   756                           ; Switch size 1, requested type "simple"
   757                           ; Number of cases is 1, Range of values is 0 to 0
   758                           ; switch strategies available:
   759                           ; Name         Instructions Cycles
   760                           ; simple_byte            4     3 (average)
   761                           ; direct_byte            7     6 (fixed)
   762                           ; jumptable            260     6 (fixed)
   763                           ;	Chosen strategy is simple_byte
   764  07CD  087A               	movf	writeNumber@num+1,w
   765  07CE  3A00               	xorlw	0	; case 0
   766  07CF  1903               	skipnz
   767  07D0  2FD2               	goto	l883
   768  07D1  2FF2               	goto	l34
   769  07D2                     l883:	
   770                           
   771                           ; Switch size 1, requested type "simple"
   772                           ; Number of cases is 10, Range of values is 0 to 9
   773                           ; switch strategies available:
   774                           ; Name         Instructions Cycles
   775                           ; direct_byte           16     6 (fixed)
   776                           ; simple_byte           31    16 (average)
   777                           ; jumptable            260     6 (fixed)
   778                           ;	Chosen strategy is simple_byte
   779  07D2  0879               	movf	writeNumber@num,w
   780  07D3  3A00               	xorlw	0	; case 0
   781  07D4  1903               	skipnz
   782  07D5  2FBC               	goto	l787
   783  07D6  3A01               	xorlw	1	; case 1
   784  07D7  1903               	skipnz
   785  07D8  2F23               	goto	l769
   786  07D9  3A03               	xorlw	3	; case 2
   787  07DA  1903               	skipnz
   788  07DB  2F34               	goto	l771
   789  07DC  3A01               	xorlw	1	; case 3
   790  07DD  1903               	skipnz
   791  07DE  2F45               	goto	l773
   792  07DF  3A07               	xorlw	7	; case 4
   793  07E0  1903               	skipnz
   794  07E1  2F56               	goto	l775
   795  07E2  3A01               	xorlw	1	; case 5
   796  07E3  1903               	skipnz
   797  07E4  2F67               	goto	l777
   798  07E5  3A03               	xorlw	3	; case 6
   799  07E6  1903               	skipnz
   800  07E7  2F78               	goto	l779
   801  07E8  3A01               	xorlw	1	; case 7
   802  07E9  1903               	skipnz
   803  07EA  2F89               	goto	l781
   804  07EB  3A0F               	xorlw	15	; case 8
   805  07EC  1903               	skipnz
   806  07ED  2F9A               	goto	l783
   807  07EE  3A01               	xorlw	1	; case 9
   808  07EF  1903               	skipnz
   809  07F0  2FAB               	goto	l785
   810  07F1  2FF2               	goto	l34
   811  07F2                     l34:	
   812                           
   813                           ;main.c: 135:     RB6 = 1;
   814  07F2  1283               	bcf	3,5	;RP0=0, select bank0
   815  07F3  1303               	bcf	3,6	;RP1=0, select bank0
   816  07F4  1706               	bsf	6,6	;volatile
   817  07F5  0008               	return
   818  07F6                     __end_of_writeNumber:	
   819                           
   820                           	psect	text2
   821  06D4                     __ptext2:	
   822 ;; *************** function _writeBit *****************
   823 ;; Defined at:
   824 ;;		line 21 in file "main.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;  _bit            1    wreg     unsigned char 
   827 ;; Auto vars:     Size  Location     Type
   828 ;;  _bit            1    0[COMMON] unsigned char 
   829 ;; Return value:  Size  Location     Type
   830 ;;                  1    wreg      void 
   831 ;; Registers used:
   832 ;;		wreg
   833 ;; Tracked objects:
   834 ;;		On entry : 0/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   838 ;;      Params:         0       0       0       0
   839 ;;      Locals:         1       0       0       0
   840 ;;      Temps:          0       0       0       0
   841 ;;      Totals:         1       0       0       0
   842 ;;Total ram usage:        1 bytes
   843 ;; Hardware stack levels used:    1
   844 ;; This function calls:
   845 ;;		Nothing
   846 ;; This function is called by:
   847 ;;		_writeNumber
   848 ;; This function uses a non-reentrant model
   849 ;;
   850                           
   851                           
   852                           ;psect for function _writeBit
   853  06D4                     _writeBit:	
   854                           
   855                           ;incstack = 0
   856                           ; Regs used in _writeBit: [wreg]
   857                           ;writeBit@_bit stored from wreg
   858  06D4  00F8               	movwf	writeBit@_bit
   859                           
   860                           ;main.c: 21: void writeBit(char _bit);main.c: 22: {;main.c: 23:   RB7 = 0;
   861  06D5  1283               	bcf	3,5	;RP0=0, select bank0
   862  06D6  1303               	bcf	3,6	;RP1=0, select bank0
   863  06D7  1386               	bcf	6,7	;volatile
   864                           
   865                           ;main.c: 24:   RB5 = _bit;
   866  06D8  1C78               	btfss	writeBit@_bit,0
   867  06D9  2EDE               	goto	u10
   868  06DA  1283               	bcf	3,5	;RP0=0, select bank0
   869  06DB  1303               	bcf	3,6	;RP1=0, select bank0
   870  06DC  1686               	bsf	6,5	;volatile
   871  06DD  2EE1               	goto	u24
   872  06DE                     u10:	
   873  06DE  1283               	bcf	3,5	;RP0=0, select bank0
   874  06DF  1303               	bcf	3,6	;RP1=0, select bank0
   875  06E0  1286               	bcf	6,5	;volatile
   876  06E1                     u24:	
   877                           
   878                           ;main.c: 25:   RB7 = 1;
   879  06E1  1786               	bsf	6,7	;volatile
   880                           
   881                           ;main.c: 26:   RB7 = 0;
   882  06E2  1386               	bcf	6,7	;volatile
   883  06E3  0008               	return
   884  06E4                     __end_of_writeBit:	
   885  007E                     btemp	set	126	;btemp
   886  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_writeNumber
    _writeNumber->_writeBit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     341
                        _writeNumber
 ---------------------------------------------------------------------------------
 (1) _writeNumber                                          2     0      2     341
                                              1 COMMON     2     0      2
                           _writeBit
 ---------------------------------------------------------------------------------
 (2) _writeBit                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _writeNumber
     _writeBit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       B       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0       B      10        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Jun 01 21:52:13 2019

            __CFG_CP$OFF 0000           writeNumber@num 0079                       l34 07F2  
                     u10 06DE                       u24 06E1                       _h1 0076  
                     _h2 0074                       _m1 0072                       _m2 0070  
                    l771 0734                      l781 0789                      l773 0745  
                    l783 079A                      l775 0756                      l791 07CD  
                    l785 07AB                      l777 0767                      l769 0723  
                    l883 07D2                      l787 07BC                      l779 0778  
                    l799 06F2                      _RB1 0031                      _RB2 0032  
                    _RB3 0033                      _RB4 0034                      _RB5 0035  
                    _RB6 0036                      _RB7 0037             __CFG_CPD$OFF 0000  
           __CFG_LVP$OFF 0000                     _main 06E4                     btemp 007E  
                   start 0000                    ?_main 0078            __CFG_WDTE$OFF 0000  
            _writeNumber 071F                    _PORTB 0006                    _TRISB 0086  
          __CFG_PWRTE$ON 0000           __CFG_BOREN$OFF 0000                    status 0003  
                  wtemp0 007E           __CFG_MCLRE$OFF 0000          __initialization 07F6  
           __end_of_main 071F                   ??_main 007B         __end_of_writeBit 06E4  
__end_of__initialization 07FE           __pcstackCOMMON 0078               __pmaintext 06E4  
           ?_writeNumber 0079                ?_writeBit 0078                  __ptext1 071F  
                __ptext2 06D4     end_of_initialization 07FE             writeBit@_bit 0078  
             ??_writeBit 0078      start_initialization 07F6     __size_of_writeNumber 00D7  
            __pbssCOMMON 0070                ___latbits 0000        __size_of_writeBit 0010  
          __size_of_main 003B                 _writeBit 06D4            ??_writeNumber 007B  
    __CFG_FOSC$INTOSCCLK 0000      __end_of_writeNumber 07F6  
